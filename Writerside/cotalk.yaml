openapi: "3.0.2"
info:
  title: CoTalk API Reference
  version: "1.0"
servers:
  - url: https://api.server.test/v1

tags:
  - name: user
    description: Operations about user

paths:
  /api/user/login:
    post:
      tags:
        - user
      summary: 用户登录
      description: 本接口只能在用户登录时访问，注册是/api/user/register
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: 用户不存在，info为"User Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '401':
          description: 密码错误，info为"Password Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/register:
    post:
      tags:
        - user
      summary: 用户注册
      description: 用户基本的注册信息，可传description/email/avatar，注册后自动置为登录状态
      operationId: userRegister
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - user_name
                - password
              properties:
                user_name:
                  type: string
                  description: 用户名，长度小于等于50
                  example: "Plato"
                password:
                  type: string
                  description: 用户密码，长度小于等于50
                  example: "123456"
                user_email:
                  type: string
                  format: email
                  description: 用户邮箱，长度小于等于100
                  example: "Plato@163.com"
                user_phone:
                  type: string
                  format: phone number
                  description: 用户电话，长度小于等于100
                  example: "2132142312"
                description:
                  type: string
                  description: 用户简介，长度小于等于100
                  example: "A great philosopher"
                avatar:
                  type: string
                  format: binary
                  description: 用户头像
                  example: "{FILE BINARY}"
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '409':
          description: 该用户已经存在，info为"Username conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/private/{user_id}:
    get:
      tags:
        - user
      description: 根据用户ID，获取该用户的详细信息 (头像除外)
      operationId: getUser
      requestBody: null
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    description: 该用户的id
                  user_name:
                    type: string
                    description: 该用户的用户名
                  user_email:
                    type: string
                    description: 该用户的电子邮箱
                  user_phone:
                    type: string
                    description: 用户电话
                  description:
                    type: string
                    description: 该用户的描述
                  register_time:
                    type: number
                    description: 注册时间
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: 用户id不存在, info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    delete:
      tags:
        - user
      summary: 用户注销
      description: 注销该用户，删除所有关联信息（消息、好友、聊天）
      operationId: deleteUser
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token (无请求体)
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody: null
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在, info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    post:
      tags:
        - user
      summary: 用户更新个人信息
      description: 更新用户名、密码、头像、邮箱等
      operationId: updateUser
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 用户原密码
                  example: "qwerty"
                user_name:
                  type: string
                  description: 新的用户名，长度小于等于50
                  example: "Plato"
                password:
                  type: string
                  description: 用户新密码，长度小于等于50
                  example: "123456"
                code:
                  type: string
                  description: 6位用户验证码
                  example: "217397"
                user_email:
                  type: string
                  format: email
                  description: 用户新邮箱，长度小于等于100
                  example: "Plato@163.com"
                user_phone:
                  type: string
                  format: phone number
                  description: 用户新电话，长度小于等于100
                  example: "2132142312"
                description:
                  type: string
                  description: 用户描述，长度小于等于100
                  example: "A great philosopher"
                avatar:
                  type: string
                  format: binary
                  description: 用户新头像
                  example: "{FILE BINARY}"
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在, info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '409':
          description: 该用户已经存在，info为"Username conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/private/{user_id}/verification:
    put:
      tags:
        - user
      summary: 向绑定邮箱发送验证码
      description: 向绑定邮箱发送验证码
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token (无请求体)
          required: true
          example: "***.***.***"
          schema:
            type: string
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在, info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/private/{user_id}/friends:
    get:
      tags:
        - user
      summary: 用户好友列表获取
      description: 获取好友列表
      operationId: getFriends
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token (无请求体)
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody: null
      responses:
        '200':
          description: 成功响应，返回好友列表
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                    example: 0
                  info:
                    type: string
                    description: Success
                    example: "Success"
                  friends:
                    type: array
                    description: 好友列表
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                          description: 用户id
                          example: 1
                        user_name:
                          type: string
                          description: 用户名，长度小于等于50
                          example: "Plato"
                        user_email:
                          type: string
                          format: email
                          description: 用户邮箱，长度小于等于100
                          example: "Plato@163.com"
                        user_phone:
                          type: string
                          format: phone number
                          description: 用户电话，长度小于等于100
                          example: "2132142312"
                        description:
                          type: string
                          description: 用户简介
                          example: "A great philosopher"
                        register_time:
                          type: number
                          description: 注册时间
                          example: 1712025307.24112
                        group:
                          type: string
                          description: 好友分组名称，长度小于50，默认为`ungrouped`
                          example: "ungrouped"
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在，"Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

    put:
      tags:
        - user
      summary: 发起好友申请
      description: 发起好友申请
      operationId: makeFriends
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        required:
          - friend_id
          - approve
        content:
          application/json:
            schema:
              properties:
                friend_id:
                  type: integer
                  description: 申请好友的id
                  example: 1
                approve:
                  type: boolean
                  description: 是否同意申请
                  example: true
                group:
                  type: string
                  description: 好友分组
                  example: ungrouped
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在，info为 "Invalid user id" | "Invalid friend id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/private/{user_id}/chats:
    delete:
      tags:
        - user
      summary: 退出聊天
      description: 退出聊天
      operationId: exitChat
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                chat_id:
                  type: integer
                  description: 目标聊天id
                  example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id或群聊id不存在，info为 "Invalid user id" | "Invalid chat id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '412':
          description: 尝试退出私聊
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: -6
                  info:
                    type: string
                    info: Cannot exit a private chat
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    get:
      tags:
        - user
      summary: 用户聊天列表获取
      description: 用户聊天列表获取
      operationId: getChats
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token (无请求体)
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody: null
      responses:
        '200':
          description: 成功响应，返回聊天列表
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                    example: 0
                  info:
                    type: string
                    description: Success
                    example: "Success"
                  chats:
                    type: array
                    description: 聊天列表
                    items:
                      type: object
                      properties:
                        chat_id:
                          type: integer
                          description: 聊天id
                          example: 1
                        chat_name:
                          type: string
                          description: 聊天名称
                          example: "Athens"
                        create_time:
                          type: number
                          description: 创建时间
                          example: 1712025307.24112
                        is_private:
                          type: boolean
                          description: 是否为私聊
                          example: true
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在，info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/search:
    get:
      tags:
        - user
      summary: 获取用户列表
      description: 根据搜索词获取用户列表
      operationId: getUsers
      requestBody:
        content:
          Query string:
            schema:
              properties:
                search_text:
                  type: string
                  description: 搜索词
      responses:
        '200':
          description: 成功响应，返回用户列表
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                    example: 0
                  info:
                    type: string
                    description: Success
                    example: "Success"
                  users:
                    type: array
                    description: 用户列表
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                          description: 用户id
                          example: 1
                        user_name:
                          type: string
                          description: 用户名，长度小于等于50
                          example: "Plato"
                        user_email:
                          type: string
                          format: email
                          description: 用户邮箱，长度小于等于100
                          example: "Plato@163.com"
                        user_phone:
                          type: string
                          format: phone number
                          description: 用户电话，长度小于等于100
                          example: "2132142312"
                        description:
                          type: string
                          description: 用户简介
                          example: "A great philosopher"
                        register_time:
                          type: number
                          description: 注册时间
                          example: 1712025307.24112
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/chat/{chatid}/members:
    put:
      tags:
        - chat
      summary: 聊天邀请/踢人
      description: 邀请某用户加入聊天/踢出聊天
      operationId: inviteChat
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
                member_id:
                  type: integer
                  description: 对方id
                  example: 1
                approve:
                  type: boolean
                  description: 是否同意加入
                  example: true
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误或没有聊天管理权限，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 聊天id或用户id不存在，info为 "Invalid user id" | "Invalid chat id" | "Invalid member id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    get:
      tags:
        - chat
      summary: 获取聊天成员列表
      description: 获取聊天成员列表，及其详情信息、权限
      operationId: chatMembers
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          Query String:
            schema:
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                  info:
                    type: string
                    description: Success
                  members:
                    type: array
                    description: 成员列表
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                          description: 用户id
                          example: 1
                        user_name:
                          type: string
                          description: 用户名，长度小于等于50
                          example: "Plato"
                        user_email:
                          type: string
                          format: email
                          description: 用户邮箱，长度小于等于100
                          example: "Plato@163.com"
                        user_phone:
                          type: string
                          format: phone number
                          description: 用户电话，长度小于等于100
                          example: "2132142312"
                        description:
                          type: string
                          description: 用户简介
                          example: "A great philosopher"
                        register_time:
                          type: number
                          description: 注册时间
                          example: 1712025307.24112
                        privilege:
                          type: string
                          description: 用户权限
                          enum:
                            - O(owner)
                            - A(admin)
                            - M(member)
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 聊天id或用户id不存在，info为 "Invalid user id" | "Invalid chat id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/chat/{chatid}/detail:
    get:
      tags:
        - chat
      summary: 获取聊天详细信息
      description: 获取聊天的详细信息
      requestBody: null
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                properties:
                  chat_id:
                    type: integer
                    description: 聊天id
                  chat_name:
                    type: string
                    description: 聊天名
                  owner_id:
                    type: integer
                    description: 群主id
                  member_num:
                    type: integer
                    description: 群成员数量
                  create_time:
                    type: number
                    format: timestamp
                    description: 创建时间
                  is_private:
                    type: boolean
                    description: 是否为私聊
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: 聊天id不存在，info为 "Invalid chat id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'


  /api/chat/{chatid}/management:
    put:
      tags:
        - chat
      summary: 修改成员权限
      description: 将某个成员的权限修改为“成员(member)”，“管理员(admin)”，“群主(owner)”
      operationId: manageChat
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
                member_id:
                  type: integer
                  description: 对方id
                  example: 1
                change_to:
                  type: string
                  description: 要把对方的权限修改成xxx
                  enum:
                    - owner
                    - admin
                    - member
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误或没有聊天管理权限，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 聊天id或用户id不存在，info为 "Invalid user id" | "Invalid chat id" | "Invalid member id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/chat/{chatid}/messages:
    get:
      tags:
        - chat
      summary: 获取聊天消息列表
      description: 获取聊天消息列表，及其已读/未读信息。
      operationId: getChatMessages
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          Query string:
            schema:
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
                filter_text:
                  type: string
                  description: 过滤含指定搜索文本的所有消息（区分大小写）
                filter_user:
                  type: integer
                  description: 过滤对应用户所发的所有消息
                filter_before:
                  type: number
                  description: 过滤该时段之前的所有消息
                filter_after:
                  type: number
                  description: 过滤该时段之后的所有消息
                filter_type:
                  type: string
                  description: 过滤对应类型的消息
                  enum:
                    - text
                    - group_notice
                    - image
                    - video
                    - audio
                    - others

      responses:
        '200':
          description: 成功响应，返回消息列表
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                  info:
                    type: string
                    description: Success
                  messages:
                    type: array
                    description: 消息列表
                    items:
                      type: object
                      properties:
                        msg_id:
                          type: integer
                          description: 消息id
                          example: 1
                        chat_id:
                          type: integer
                          description: 消息所在聊天的id
                          example: 1
                        sender_id:
                          type: integer
                          description: 发送者id
                          example: 1
                        msg_text:
                          type: string
                          description: 消息文字
                          example: "I published the Republic"
                        msg_type:
                          type: string
                          description: 消息类型
                          enum:
                            - T(text)
                            - I(image)
                            - A(audio)
                            - V(video)
                            - G(group notice)
                            - O(others)
                          example: T
                        create_time:
                          type: number
                          format: time
                          description: 消息发送的时间
                          example: 1710836514
                        update_time:
                          type: number
                          format: timestamp
                          description: 该消息状态更新的时间
                        read_users:
                          type: array
                          description: 已读成员id列表
                          example: [ 1,2 ]
                        reply_to:
                          type: integer
                          description: 回复的消息id，若没有指定，默认为-1
                        is_system:
                          type: boolean
                          description: 是否为系统消息
                        msg_file_url:
                          type: string
                          format: url
                          description: 如果有文件，返回该文件的url，可通过get方法获取；否则，该字段为空。
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 聊天id或用户id不存在，info为 "Invalid user id" | "Invalid chat id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/chat/create:
    post:
      tags:
        - chat
      summary: 新建一个聊天
      description: 新建一个聊天
      operationId: createChat
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
                - chat_name
                - is_private
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
                chat_name:
                  type: string
                  description: 聊天名称
                  example: "Athens"
                members:
                  type: array
                  description: 将要邀请的成员id列表
                  example: [ 2, 3 ]
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 0
                    example: 0
                  info:
                    type: string
                    description: Success
                    default: "Success"
                    example: "Success"
                  chat_id:
                    type: integer
                    description: 新创建的聊天id
                    example: 1
                  create_time:
                    type: number
                    format: time
                    description: 该聊天的创建时间
                    example: 1710836514
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在，info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '409':
          description: 该聊天已经存在，info为"Chatname conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'



  /api/message/{messageid}/management:
    get:
      tags:
        - message
      summary: 获取某消息的全部信息
      description: 获取某消息的全部信息
      operationId: getMessage
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          Query string:
            schema:
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
      responses:
        '200':
          description: 成功响应，返回消息所有信息
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                  info:
                    type: string
                    description: Success
                  msg_id:
                    type: integer
                    description: 消息id
                    example: 1
                  chat_id:
                    type: integer
                    description: 消息所在聊天的id
                    example: 1
                  sender_id:
                    type: integer
                    description: 发送者id
                    example: 1
                  msg_text:
                    type: string
                    description: 消息文字
                    example: "I published the Republic"
                  msg_type:
                    type: string
                    description: 消息类型
                    enum:
                      - T(text)
                      - I(image)
                      - A(audio)
                      - V(video)
                      - O(others)
                    example: text
                  create_time:
                    type: number
                    format: time
                    description: 消息发送的时间
                    example: 1710836514
                  update_time:
                    type: number
                    format: timestamp
                    description: 该消息状态更新的时间
                  read_users:
                    type: array
                    description: 已读成员id列表
                    example: [ 1,2 ]
                  unable_to_see_users:
                    type: array
                    description: 不可视该消息的成员id列表
                    example: [ 1,2 ]
                  reply_to:
                    type: integer
                    description: 回复的消息id，若没有指定，默认为-1
                  is_system:
                    type: boolean
                    description: 是否为系统消息
                  msg_file_url:
                    type: string
                    format: url
                    description: 如果有文件，返回该文件的url，可通过get方法获取；否则，该字段为空。
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized" 或 用户不可视该消息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 消息id或用户id不存在，info为 "Invalid user id" | "Invalid message id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    delete:
      tags:
        - message
      summary: 撤回某消息
      description: 撤回某消息，只能在发送后5min内操作
      operationId: deleteMessage
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
                - is_remove
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
                is_remove:
                  type: boolean
                  description: 是否撤回该消息。如果为否，则为“删除该消息”
                  example: false
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 如果为撤回，令牌错误或用户不是该消息的发送者，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id或消息id不存在，info为 "Invalid user id" | "Invalid message id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '412':
          description: 如果为撤回，距消息发出已超过5min, info为 "Time exceed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    put:
      tags:
        - message
      summary: 通知后端本人已阅读该消息
      description: 通知后端本人已阅读该消息
      operationId: readMessage
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"。或该用户不可视该消息。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id或消息id不存在，info为 "Invalid user id" | "Invalid message id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'


  /api/message/send:
    post:
      tags:
        - message
      summary: 发送一条消息
      description: 发送一条消息
      operationId: sendMessage
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - user_id
                - chat_id
                - msg_text
                - msg_type
              properties:
                user_id:
                  type: integer
                  description: 自己账户的id
                  example: 1
                chat_id:
                  type: integer
                  description: 聊天id
                  example: 1
                msg_text:
                  type: string
                  description: 消息文字
                  example: "I published the Republic"
                msg_type:
                  type: string
                  description: 消息类型
                  enum:
                    - text
                    - group_notice
                    - image
                    - audio
                    - video
                    - others
                  example: "text"
                reply_to:
                  type: integer
                  description: 回复某个消息，如果没有目标消息，请不要传这个字段
                  example: 90
                msg_file:
                  type: string
                  format: binary
                  description: 文件，使用Multipart/form-data的文件字段传输
                  example: "FILE BINARY"
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 0
                    example: 0
                  info:
                    type: string
                    description: Success
                    default: "Success"
                    example: "Success"
                  msg_id:
                    type: integer
                    description: 新发送的消息id
                    example: 1
                  create_time:
                    type: number
                    format: time
                    description: 该消息的创建时间
                    example: 1710836514
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id或聊天id不存在，info为 "Invalid user id" | "Invalid chat id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'


  /api/user/private/{user_id}/notification/{notification_id}:
    get:
      tags:
        - notification
      summary: 获取某通知的全部信息
      description: 获取某通知的全部信息
      operationId: getNotification
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody: null
      responses:
        '200':
          description: 成功响应，返回消息所有信息
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                  info:
                    type: string
                    description: Success
                  notification_id:
                    type: integer
                    description: 通知id
                    example: 1
                  sender_id:
                    type: integer
                    description: 发送者id
                    example: 1
                  content:
                    type: string
                    description: 消息内容
                  create_time:
                    type: number
                    format: time
                    description: 消息发送的时间
                    example: 1710836514
                  is_read:
                    type: boolean
                    description: 是否已读
                    example: False
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 通知id或用户id不存在，info为 "Invalid user id" | "Invalid notification id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    delete:
      tags:
        - notification
      summary: 删除某通知
      description: 永久删除某通知
      operationId: deleteNotification
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody: null
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误或用户不是该消息的所有者，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id或通知id不存在，info为 "Invalid user id" | "Invalid notification id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    put:
      tags:
        - notification
      summary: 通知后端本人已阅读该通知
      description: 通知后端本人已阅读该通知
      operationId: readNotification
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody: null
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"。或该用户不可视该通知，info为 "Cannot read"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id或通知id不存在，info为 "Invalid user id" | "Invalid notification id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'

  /api/user/private/{user_id}/avatar:
    get:
      tags:
        - user
      summary: 用户头像获取
      description: 获取用户头像
      operationId: getAvatar
      requestBody: null
      responses:
        '200':
          description: 成功响应，返回头像
          content:
            image/xxx:
              schema:
                type: object
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: 用户id不存在，"Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'


  /api/user/private/{user_id}/notifications:
    get:
      tags:
        - user
      summary: 获取通知列表
      description: 根据目标字段获取通知列表，若对应字段不存在（如果存在，不能为空！），返回所有通知
      operationId: getNotifications
      parameters:
        - name: Authorization
          in: header
          description: JWT authorization token
          required: true
          example: "***.***.***"
          schema:
            type: string
      requestBody:
        content:
          Query string:
            schema:
              required:
                - only_unread
                - later_than
              properties:
                only_unread:
                  type: boolean
                  description: 是否只返回未读通知
                  example: false
                later_than:
                  type: number
                  format: timestamp
                  description: 返回晚于某时间码的通知，默认请设为0
                  example: 0
      responses:
        '200':
          description: 成功响应，返回消息列表
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    description: 0
                  info:
                    type: string
                    description: Success
                  notifications:
                    type: array
                    description: 通知列表
                    items:
                      type: object
                      properties:
                        notification_id:
                          type: integer
                          description: 通知id
                          example: 1
                        sender_id:
                          type: integer
                          description: 发送者id
                          example: 1
                        content:
                          type: string
                          description: 通知内容
                        create_time:
                          type: number
                          format: time
                          description: 通知发送的时间
                          example: 1710836514
                        is_read:
                          type: boolean
                          description: 是否已读
                          example: False
        '400':
          description: 请求体格式错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: 令牌错误，info为 "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户id不存在，info为 "Invalid user id"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '405':
          description: 请求方法错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadMethodResponse'
        '500':
          description: 服务器内部错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'


components:
  schemas:
    User:
      properties:
        user_name:
          type: string
          description: 用户名，长度小于等于50
          example: "Plato"
        password:
          type: string
          description: 用户密码，长度小于等于50
          example: "123456"
    JWTResponse:
      required:
        - code
        - info
        - token
        - user_id
        - user_name
        - password
      properties:
        code:
          type: integer
          description: 0
          example: 0
        info:
          type: string
          description: Success
          default: "Success"
          example: "Success"
        token:
          type: string
          description: 服务端签发的JWT令牌
          example: "***.***.***"
        user_id:
          type: integer
          description: 用户id
          example: 1
        user_name:
          type: string
          description: 用户名，长度小于等于50
          example: "Plato"
        user_email:
          type: string
          format: email
          description: 用户邮箱，长度小于等于100
          example: "Plato@163.com"
        user_phone:
          type: string
          format: phone number
          description: 用户电话，长度小于等于100
          example: "2132142312"
        description:
          type: string
          description: 用户简介
          example: "A great philosopher"
        register_time:
          type: number
          description: 注册时间
          example: 1712025307.24112
    SuccessResponse:
      type: object
      properties:
        code:
          type: integer
          description: 0
          example: 0
        info:
          type: string
          description: Success
          default: "Success"
          example: "Success"
    NotFoundResponse:
      type: object
      properties:
        code:
          type: integer
          description: -1
          example: -1
        info:
          type: string
          description: some message
          example: "some message"
    UnauthorizedResponse:
      type: object
      properties:
        code:
          type: integer
          description: -2
          example: -2
        info:
          type: string
          description: some message
          example: "some message"
    BadMethodResponse:
      type: object
      properties:
        code:
          type: integer
          description: -3
          example: -3
        info:
          type: string
          description: Bad method
          default: "Bad method"
          example: "Bad method"
    ServerErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: -4
          example: -4
        info:
          type: string
          description: Server error
          default: "Server error"
          example: "Server error"
    ConflictResponse:
      type: object
      properties:
        code:
          type: integer
          description: -5
          example: -5
        info:
          type: string
          description: some message
          example: "some message"
    PreconditionFailedResponse:
      type: object
      properties:
        code:
          type: integer
          description: -6
          example: -6
        info:
          type: string
          description: some message
          example: "some message"
    BadRequestResponse:
      type: object
      properties:
        code:
          type: integer
          description: -7
          example: -7
        info:
          type: string
          description: some message
          example: "some message"
